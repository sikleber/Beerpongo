# prod configuration
dynamoDB:
  stackName: 'BeerpongoDynamoDbStackProd'
  gamesTable:
    id: 'BeerpongoProdGamesTable'
    tableName: 'BeerpongoProdGamesTable'

Lambda:
  stackName: 'BeerpongoLambdaStackProd'
  lambdas:
    lambda_on_create_game:
      name: "lambdaProd_createGame"
      code: "./../backend/websocket_lambdas/on_create_game"
      handler: "lambda_on_create_game.on_create_game"
      runtime: "python3.9"
    lambda_on_join_game:
      name: "lambdaProd_joinGame"
      code: "./../backend/websocket_lambdas"
      handler: "lambda_on_join_game.on_join_game"
      runtime: "python3.9"
    lambda_on_update_game:
      name: "lambdaProd_updateGame"
      code: "./../backend/websocket_lambdas"
      handler: "lambda_on_update_game.on_update_game"
      runtime: "python3.9"
      
apiGatewayWebsocket:
  stackName: 'BeerpongoAPIGatewayWebsocketStackProd'
  id: 'BeerpongoProdWebsocketApi'
  name: 'BeerpongoProdWebsocketApi'
  stage:
    id: 'BeerpongoWebsocketStageProd'
    name: 'Prod'
  createGameRoute:
    id: 'CreateGameIntegrationProd'
    responseId: 'CreateGameIntegrationProd'
    key: 'CreateGame'
  joinGameRoute:
    id: 'JoinGameIntegrationProd'
    responseId: 'JoinGameIntegrationProd'
    key: 'JoinGame'
  updateGameRoute:
    id: 'UpdateGameIntegrationProd'
    responseId: 'UpdateGameIntegrationProd'
    key: 'UpdateGame'